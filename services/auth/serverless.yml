service: palmera-auth

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    NODE_ENV: ${.env:NODE_ENV}
    MONGODB_URI: ${.env:MONGODB_URI}
    JWT_SECRET: ${.env:JWT_SECRET}
    GOOGLE_CLIENT_ID: ${.env:GOOGLE_CLIENT_ID}
    GOOGLE_CLIENT_SECRET: ${.env:GOOGLE_CLIENT_SECRET}
    TWILIO_ACCOUNT_SID: ${.env:TWILIO_ACCOUNT_SID}
    TWILIO_AUTH_TOKEN: ${.env:TWILIO_AUTH_TOKEN}
    TWILIO_PHONE_NUMBER: ${.env:TWILIO_PHONE_NUMBER}

functions:
  signup:
    handler: src/handlers/signupHandler.handler
    events:
      - http:
          path: /auth/signup
          method: post
          cors: true

  login:
    handler: src/handlers/loginHandler.handler
    events:
      - http:
          path: /auth/login
          method: post
          cors: true

  googleAuth:
    handler: src/handlers/googleOAuthHandler.handler
    events:
      - http:
          path: /auth/google
          method: post
          cors: true

  refreshToken:
    handler: src/handlers/refreshTokenHandler.handler
    events:
      - http:
          path: /auth/refresh
          method: post
          cors: true
          authorizer:
            arn: arn:aws:lambda:us-east-1:850995537590:function:palmera-auth-dev-verifyToken
            type: token

  logout:
    handler: src/handlers/logoutHandler.handler
    events:
      - http:
          path: /auth/logout
          method: post
          cors: true
          authorizer:
            arn: arn:aws:lambda:us-east-1:850995537590:function:palmera-auth-dev-verifyToken
            type: token

  sendOtp:
    handler: src/handlers/sendOtpHandler.handler
    events:
      - http:
          path: /auth/otp/send
          method: post
          cors: true

  verifyOtp:
    handler: src/handlers/verifyOtpHandler.handler
    events:
      - http:
          path: /auth/otp/verify
          method: post
          cors: true

  deleteAccount:
    handler: src/handlers/deleteAccountHandler.handler
    events:
      - http:
          path: /auth/delete-account
          method: delete
          cors: true
          authorizer:
            arn: arn:aws:lambda:us-east-1:850995537590:function:palmera-auth-dev-verifyToken
            type: token

  verifyToken:
    handler: src/middlewares/authMiddleware.verifyToken

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-prune-plugin

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: ApiGatewayRestApi
        StatusCode: '400'
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
    GatewayResponseDefault5XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: ApiGatewayRestApi
        StatusCode: '500'
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"

package:
  patterns:
    - "!.git/**"
    - "!.gitignore"
    - "!.env*"
    - "!README.md"
    - "!tests/**"
    - "!coverage/**"
